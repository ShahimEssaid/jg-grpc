// source: essaid/grpc/tims/v0/tims.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.essaid.grpc.tims.v0.Concept', null, global);
goog.exportSymbol('proto.essaid.grpc.tims.v0.Path', null, global);
goog.exportSymbol('proto.essaid.grpc.tims.v0.PathRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.essaid.grpc.tims.v0.Concept = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.essaid.grpc.tims.v0.Concept, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.essaid.grpc.tims.v0.Concept.displayName = 'proto.essaid.grpc.tims.v0.Concept';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.essaid.grpc.tims.v0.PathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.essaid.grpc.tims.v0.PathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.essaid.grpc.tims.v0.PathRequest.displayName = 'proto.essaid.grpc.tims.v0.PathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.essaid.grpc.tims.v0.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.essaid.grpc.tims.v0.Path.repeatedFields_, null);
};
goog.inherits(proto.essaid.grpc.tims.v0.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.essaid.grpc.tims.v0.Path.displayName = 'proto.essaid.grpc.tims.v0.Path';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.essaid.grpc.tims.v0.Concept.prototype.toObject = function(opt_includeInstance) {
  return proto.essaid.grpc.tims.v0.Concept.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.essaid.grpc.tims.v0.Concept} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.Concept.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.essaid.grpc.tims.v0.Concept}
 */
proto.essaid.grpc.tims.v0.Concept.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.essaid.grpc.tims.v0.Concept;
  return proto.essaid.grpc.tims.v0.Concept.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.essaid.grpc.tims.v0.Concept} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.essaid.grpc.tims.v0.Concept}
 */
proto.essaid.grpc.tims.v0.Concept.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.essaid.grpc.tims.v0.Concept.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.essaid.grpc.tims.v0.Concept.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.essaid.grpc.tims.v0.Concept} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.Concept.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.essaid.grpc.tims.v0.Concept.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.essaid.grpc.tims.v0.Concept} returns this
 */
proto.essaid.grpc.tims.v0.Concept.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.essaid.grpc.tims.v0.Concept.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.essaid.grpc.tims.v0.Concept} returns this
 */
proto.essaid.grpc.tims.v0.Concept.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.essaid.grpc.tims.v0.PathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.essaid.grpc.tims.v0.PathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.PathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && proto.essaid.grpc.tims.v0.Concept.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.essaid.grpc.tims.v0.Concept.toObject(includeInstance, f),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.essaid.grpc.tims.v0.PathRequest}
 */
proto.essaid.grpc.tims.v0.PathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.essaid.grpc.tims.v0.PathRequest;
  return proto.essaid.grpc.tims.v0.PathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.essaid.grpc.tims.v0.PathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.essaid.grpc.tims.v0.PathRequest}
 */
proto.essaid.grpc.tims.v0.PathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.essaid.grpc.tims.v0.Concept;
      reader.readMessage(value,proto.essaid.grpc.tims.v0.Concept.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new proto.essaid.grpc.tims.v0.Concept;
      reader.readMessage(value,proto.essaid.grpc.tims.v0.Concept.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.essaid.grpc.tims.v0.PathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.essaid.grpc.tims.v0.PathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.PathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.essaid.grpc.tims.v0.Concept.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.essaid.grpc.tims.v0.Concept.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional Concept from = 1;
 * @return {?proto.essaid.grpc.tims.v0.Concept}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.getFrom = function() {
  return /** @type{?proto.essaid.grpc.tims.v0.Concept} */ (
    jspb.Message.getWrapperField(this, proto.essaid.grpc.tims.v0.Concept, 1));
};


/**
 * @param {?proto.essaid.grpc.tims.v0.Concept|undefined} value
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
*/
proto.essaid.grpc.tims.v0.PathRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Concept to = 2;
 * @return {?proto.essaid.grpc.tims.v0.Concept}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.getTo = function() {
  return /** @type{?proto.essaid.grpc.tims.v0.Concept} */ (
    jspb.Message.getWrapperField(this, proto.essaid.grpc.tims.v0.Concept, 2));
};


/**
 * @param {?proto.essaid.grpc.tims.v0.Concept|undefined} value
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
*/
proto.essaid.grpc.tims.v0.PathRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.essaid.grpc.tims.v0.PathRequest} returns this
 */
proto.essaid.grpc.tims.v0.PathRequest.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.essaid.grpc.tims.v0.Path.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.essaid.grpc.tims.v0.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.essaid.grpc.tims.v0.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.essaid.grpc.tims.v0.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    conceptsList: jspb.Message.toObjectList(msg.getConceptsList(),
    proto.essaid.grpc.tims.v0.Concept.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.essaid.grpc.tims.v0.Path}
 */
proto.essaid.grpc.tims.v0.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.essaid.grpc.tims.v0.Path;
  return proto.essaid.grpc.tims.v0.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.essaid.grpc.tims.v0.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.essaid.grpc.tims.v0.Path}
 */
proto.essaid.grpc.tims.v0.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.essaid.grpc.tims.v0.Concept;
      reader.readMessage(value,proto.essaid.grpc.tims.v0.Concept.deserializeBinaryFromReader);
      msg.addConcepts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.essaid.grpc.tims.v0.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.essaid.grpc.tims.v0.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.essaid.grpc.tims.v0.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.essaid.grpc.tims.v0.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConceptsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.essaid.grpc.tims.v0.Concept.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Concept concepts = 1;
 * @return {!Array<!proto.essaid.grpc.tims.v0.Concept>}
 */
proto.essaid.grpc.tims.v0.Path.prototype.getConceptsList = function() {
  return /** @type{!Array<!proto.essaid.grpc.tims.v0.Concept>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.essaid.grpc.tims.v0.Concept, 1));
};


/**
 * @param {!Array<!proto.essaid.grpc.tims.v0.Concept>} value
 * @return {!proto.essaid.grpc.tims.v0.Path} returns this
*/
proto.essaid.grpc.tims.v0.Path.prototype.setConceptsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.essaid.grpc.tims.v0.Concept=} opt_value
 * @param {number=} opt_index
 * @return {!proto.essaid.grpc.tims.v0.Concept}
 */
proto.essaid.grpc.tims.v0.Path.prototype.addConcepts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.essaid.grpc.tims.v0.Concept, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.essaid.grpc.tims.v0.Path} returns this
 */
proto.essaid.grpc.tims.v0.Path.prototype.clearConceptsList = function() {
  return this.setConceptsList([]);
};


goog.object.extend(exports, proto.essaid.grpc.tims.v0);
